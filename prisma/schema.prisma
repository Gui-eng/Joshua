// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  username String  @unique
  password String
  email    String  @unique
  role     ROLES   @default(ACCOUNTING)
  isAdmin  Boolean @default(false)

  employeeInfo   EmployeeInfo? @relation(fields: [employeeInfoId], references: [id])
  employeeInfoId String?       @unique
}

model EmployeeInfo {
  id         String     @id @default(uuid())
  firstName  String
  middleName String
  lastName   String
  code       String?
  address    String
  dateHired  DateTime
  department DEPARTMENT
  contactNo  String

  Employee Employee[]
  User     User?
}

model Employee {
  id             String       @id @default(uuid())
  employee       EmployeeInfo @relation(fields: [employeeInfoId], references: [id])
  employeeInfoId String

  SIPreparedBy SalesInvoice[]
}

model ClientInfo {
  id          String @id @default(uuid())
  companyName String @unique
  address     String
  TIN         String @unique

  Client Client[]
}

model Client {
  id              String          @id @default(uuid())
  clientInfo      ClientInfo      @relation(fields: [clientInfoId], references: [id])
  clientInfoId    String
  salesInvoice    SalesInvoice?   @relation(fields: [salesInvoiceId], references: [id])
  salesInvoiceId  String?         @unique
  deliveryRecipt  DeliveryRecipt? @relation(fields: [delveryReciptId], references: [id])
  delveryReciptId String          @unique

  WeeklySales WeeklySales[]
}

model ItemInfo {
  id                String   @id @default(uuid())
  itemName          String
  batchNumber       String   @unique
  manufacturingDate DateTime
  ExpirationDate    DateTime
  priceBottle       Decimal  @default(0)
  priceVial         Decimal  @default(0)
  pricePiece        Decimal  @default(0)
  priceBox          Decimal  @default(0)
  VAT               Boolean

  items Item[]
}

model Item {
  // This is used for SI mostly
  id          String  @id @default(uuid())
  quantity    Int
  unit        UNITS
  discount    Float
  vatable     Boolean
  totalAmount Decimal

  //Handles Relationships 
  SI         SalesInvoice?   @relation(fields: [sIId], references: [id])
  sIId       String?
  DR         DeliveryRecipt? @relation(fields: [dRId], references: [id])
  dRId       String?
  ItemInfo   ItemInfo        @relation(fields: [itemInfoId], references: [id])
  itemInfoId String
}

model SalesInvoice {
  id          String  @id @default(uuid())
  currentDate String
  items       Item[]
  totalAmount Decimal
  term        Int
  discount    Int
  VAT         Decimal

  preparedBy Employee @relation(fields: [employeeId], references: [id])

  employeeId String

  client Client?
}

model DeliveryRecipt {
  id          String  @id @default(uuid())
  client      Client?
  items       Item[]
  totalAmount Decimal
  Term        Int
  discount    Int
  VAT         Decimal
}

model WeeklySales {
  id          String   @id @default(uuid())
  dateIssued  DateTime
  client      Client   @relation(fields: [clientId], references: [id])
  clientId    String
  totalOrders Int
  discount    Decimal
  VAT         Decimal
  total       Decimal
}

model SOA {
  id     String   @id @default(uuid())
  name   String
  date   DateTime
  orders Int
  amount Decimal
}

enum UNITS {
  BOX
  VIALS
  BOTTLES
  PER_PIECE @map("PER PIECE")
}

enum ROLES {
  ADMIN
  SALES
  INVENTORY
  ACCOUNTING
  IT
}

enum DEPARTMENT {
  SALES
  PMR
  INVENTORY
  ACCOUNTING
  IT
}

enum STATUS {
  DELIVERED
  UN_DELIVERED    @map("UN DELIVRED")
  CANCELLED
  FOR_REPLACEMENT @map("FOR REPLACEMENT")
}
