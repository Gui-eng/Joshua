// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  username String  @unique
  password String
  email    String  @unique
  role     ROLES   @default(ACCOUNTING)
  isAdmin  Boolean @default(false)
  isActive Boolean @default(true)

  employeeInfo   EmployeeInfo? @relation(fields: [employeeInfoId], references: [id])
  employeeInfoId String?       @unique
}

model EmployeeInfo {
  id         String     @id @default(uuid())
  firstName  String
  middleName String
  lastName   String
  code       String?
  address    String
  dateHired  DateTime
  department DEPARTMENT
  contactNo  String

  Employee Employee[]
  Stocks   Stocks[]   @relation(name: "pmrEmployee")
  User     User?
}

model Employee {
  id               String          @id @default(uuid())
  employee         EmployeeInfo    @relation(fields: [employeeInfoId], references: [id])
  employeeInfoId   String
  SalesInvoice     SalesInvoice?   @relation(fields: [SalesInvoiceId], references: [id])
  SalesInvoiceId   String?
  DeliveryRecipt   DeliveryRecipt? @relation(fields: [DeliveryReciptId], references: [id])
  DeliveryReciptId String?

  SIPmr        SalesInvoice[]   @relation(name: "pmrEmployee")
  SIPreparedBy SalesInvoice[]   @relation(name: "preparedByEmployee")
  DRPreparedBy DeliveryRecipt[] @relation(name: "preparedByEmployee")
}

model ClientInfo {
  id          String @id @default(uuid())
  companyName String @unique
  address     String
  TIN         String @unique

  Client Client[]
}

model Client {
  id String @id @default(uuid())

  clientInfo      ClientInfo?     @relation(fields: [clientInfoId], references: [id])
  clientInfoId    String
  salesInvoice    SalesInvoice?   @relation(fields: [salesInvoiceId], references: [id])
  salesInvoiceId  String?
  deliveryRecipt  DeliveryRecipt? @relation(fields: [delveryReciptId], references: [id])
  delveryReciptId String?

  client      SalesInvoice[]   @relation(name: "Client")
  DRclient    DeliveryRecipt[] @relation(name: "Client")
  WeeklySales WeeklySales[]
}

model ItemInfo {
  id                String   @id @default(uuid())
  itemName          String
  batchNumber       String   @unique
  manufacturingDate DateTime
  ExpirationDate    DateTime
  priceBottle       Decimal  @default(0)
  priceVial         Decimal  @default(0)
  pricePiece        Decimal  @default(0)
  priceBox          Decimal  @default(0)
  stocksPiece       Int      @default(0)
  stocksVial        Int      @default(0)
  stocksBottle      Int      @default(0)
  stocksBox         Int      @default(0)
  VAT               Boolean

  items       Item[]
  ItemSummary ItemSummary[]
  Stocks      Stocks[]
}

model Item {
  // This is used for SI mostly
  id          String  @id @default(uuid())
  quantity    Int
  unit        UNITS
  discount    Float?
  vatable     Boolean
  totalAmount Decimal

  //Handles Relationships 
  SI         SalesInvoice?   @relation(fields: [sIId], references: [id])
  sIId       String?
  DR         DeliveryRecipt? @relation(fields: [dRId], references: [id])
  dRId       String?
  ItemInfo   ItemInfo        @relation(fields: [itemInfoId], references: [id])
  itemInfoId String
}

model SalesInvoice {
  id          String  @id @default(uuid())
  currentDate String
  totalAmount Decimal
  term        Int
  discount    Float?
  VAT         Decimal
  remarks     String? @db.VarChar(500)
  stockIn     Boolean @default(false)

  pmr              Employee?    @relation(name: "pmrEmployee", fields: [pmrEmployeeId], references: [id])
  pmrEmployeeId    String?
  preparedBy       Employee?    @relation(name: "preparedByEmployee", fields: [employeeId], references: [id])
  employeeId       String?
  client           Client?      @relation(name: "Client", fields: [clientId], references: [id])
  clientId         String?
  salesItemSummary ItemSummary? @relation(fields: [itemSummaryId], references: [id])
  itemSummaryId    String?

  Employee    Employee[]
  items       Item[]
  Client      Client[]
  ItemSummary ItemSummary[] @relation(name: "salesInvoice")
}

model DeliveryRecipt {
  id          String   @id @default(uuid())
  totalAmount Decimal
  currentDate DateTime
  Term        Int
  remarks     String?  @db.VarChar(500)

  client        Client?      @relation(name: "Client", fields: [clientId], references: [id])
  clientId      String?
  preparedBy    Employee?    @relation(name: "preparedByEmployee", fields: [employeeId], references: [id])
  employeeId    String?
  itemSummary   ItemSummary? @relation(fields: [itemSummaryId], references: [id])
  itemSummaryId String?
  stockIn       Boolean      @default(false)

  items       Item[]
  Client      Client[]
  Employee    Employee[]
  ItemSummary ItemSummary[] @relation(name: "deliveryRecipt")
}

model WeeklySales {
  id          String   @id @default(uuid())
  dateIssued  DateTime
  client      Client   @relation(fields: [clientId], references: [id])
  clientId    String
  totalOrders Int
  discount    Decimal
  VAT         Decimal
  total       Decimal
}

model ItemSummary {
  id        String  @id @default(uuid())
  stocksIn  Int     @default(0)
  stocksOut Int     @default(0)
  remaining Int     @default(0)
  remakes   String?
  status    STATUS

  salesInvoice     SalesInvoice?   @relation(name: "salesInvoice", fields: [salesInvoiceId], references: [id])
  salesInvoiceId   String?
  deliveryRecipt   DeliveryRecipt? @relation(name: "deliveryRecipt", fields: [deliveryReciptId], references: [id])
  deliveryReciptId String?
  itemInfo         ItemInfo?       @relation(fields: [itemInfoId], references: [id])
  itemInfoId       String?

  SalesInvoice   SalesInvoice[]
  DeliveryRecipt DeliveryRecipt[]
}

model Stocks {
  id           String @id @default(uuid())
  stocksPiece  Int    @default(0)
  stocksVial   Int    @default(0)
  stocksBottle Int    @default(0)
  stocksBox    Int    @default(0)

  pmr           EmployeeInfo? @relation(name: "pmrEmployee", fields: [pmrEmployeeId], references: [id])
  pmrEmployeeId String?
  itemInfo      ItemInfo?     @relation(fields: [itemInfoId], references: [id])
  itemInfoId    String?
}

model SOA {
  id     String   @id @default(uuid())
  name   String
  date   DateTime
  orders Int
  amount Decimal
}

enum UNITS {
  BOX
  VIALS
  BOTTLES
  PER_PIECE @map("PER PIECE")
}

enum ROLES {
  ADMIN
  SALES
  INVENTORY
  ACCOUNTING
  IT
}

enum DEPARTMENT {
  SALES
  PMR
  INVENTORY
  ACCOUNTING
  IT
}

enum STATUS {
  DELIVERED
  UN_DELIVERED    @map("UN DELIVRED")
  CANCELLED
  FOR_REPLACEMENT @map("FOR REPLACEMENT")
}
